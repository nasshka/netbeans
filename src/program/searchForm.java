/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package program;

import java.io.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author u274612
 */
public class searchForm extends javax.swing.JFrame {

    /**
     * Creates new form searchForm
     */
    public searchForm() {
        initComponents();
        inaltimeInitiala=this.getHeight();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchBox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchCategory = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        panelTabel = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        exportButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(300, 200, 0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Search for:");

        jLabel2.setText("Search in:");

        searchCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User name", "User id", "Extension", "Hostname", "Asset tag" }));

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        panelTabel.setBorder(null);

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        tabel.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tabel.getTableHeader().setReorderingAllowed(false);
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelMousePressed(evt);
            }
        });
        panelTabel.setViewportView(tabel);

        exportButton.setText("Export to Excel");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTabel, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton)
                        .addGap(18, 18, 18)
                        .addComponent(exportButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(searchCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(exportButton))
                .addGap(18, 18, 18)
                .addComponent(panelTabel, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
       search();
       // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed
    private void search(){
    this.setSize(this.getWidth(),inaltimeInitiala);
        ArrayList<List> searchList=new ArrayList<List>();
       String cuvCautat=searchBox.getText();
       int indexCautare=searchCategory.getSelectedIndex();//
       int inaltime=this.getHeight();
       String query="";
      
    try {
    Connection con = DriverManager.getConnection("jdbc:sqlite:data/wnsCT.db");
    Statement stmt = con.createStatement();
    //setarea query-ului in functie de selectia din cautare
    
    switch(indexCautare){
        case 0:query = "SELECT DeskID from users where name LIKE '%"+cuvCautat+"%'";break;
        case 1:query = "select DeskID from users where uid LIKE '%"+cuvCautat+"%'";break;
        case 2:query = "select DeskID from inventory where AssetType='Ip Phone' AND Extension LIKE '%"+cuvCautat+"%'";break;
        case 3:query = "select DeskID from inventory where AssetType='Desktop' AND Hostname LIKE '%"+cuvCautat+"%'";break;
        case 4:query = "select DeskID from inventory where SystemAssetID LIKE '%"+cuvCautat+"%' AND (AssetType='Desktop' OR AssetType='Ip Phone' OR AssetType='Monitor')";break;
    }
    
    ResultSet rs = stmt.executeQuery(query);
    
    while (rs.next()) {
        
        String id=rs.getString("DeskID");
        if (!"none".equals(id)){
        ArrayList<String> temp=new dbConnection().getForSearch(id);//creeaza o lista noua cu rezultate
        //0=nume 1=hostname 2=extension 3=deskID
        temp.set(4,rs.getString("DeskID"));
        searchList.add(temp);//adauga lista intr-o alta lista:searchList
        }
    }
} catch (Exception e) {
    System.out.println(e);
}
    String[] columnNames = {"DeskID","Nume","UserId","Hostname","Extensie"};
   
    
    Object[][] data=new Object[searchList.size()][5];
    
      for(int index=0;index<searchList.size();index++) {
    
             data[index][0]=searchList.get(index).get(4);
             data[index][1]=searchList.get(index).get(0);
             data[index][2]=searchList.get(index).get(3);
             data[index][3]=searchList.get(index).get(1);
             data[index][4]=searchList.get(index).get(2);
            
            //Seteaza inaltimea Frameului
            }
      inaltime=inaltime+20+(searchList.size()*16);
      model = new DefaultTableModel(data, columnNames){
      @Override
       public boolean isCellEditable(int row, int column) {return false;}};//seteaza tabelul needitabil
      
      tabel.setModel(model);
      tabel.getColumnModel().getColumn(0).setPreferredWidth(60);
      tabel.getColumnModel().getColumn(1).setPreferredWidth(120);
      tabel.getColumnModel().getColumn(2).setPreferredWidth(80);
      tabel.getColumnModel().getColumn(3).setPreferredWidth(160);
      tabel.getColumnModel().getColumn(4).setPreferredWidth(150);
      if (inaltime<520){
      
      this.setSize(this.getWidth(),inaltime);
      System.out.println(this.getHeight());
      }else {this.setSize(this.getWidth(),520);}
    }
 public void exportTable(DefaultTableModel model) throws IOException{
     boolean pathChoosed;
     String path="";
      //file chooser
      JFileChooser chooser = new JFileChooser();
      chooser.setCurrentDirectory(new java.io.File("."));
      chooser.setDialogTitle("Please choose directory");
      chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
      chooser.setAcceptAllFileFilterUsed(true);
      if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
      System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
      System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
      pathChoosed=true;
      path=chooser.getSelectedFile().getCanonicalPath();
      System.out.println(path);
      } else {
          pathChoosed=false;
      System.out.println("No Selection ");
      }
      //filechooser
      if(pathChoosed==true){
      FileWriter out=new FileWriter(new File(path+"/exported.xls"));
      BufferedWriter bw=new BufferedWriter(out);
      for (int i=0;i<model.getColumnCount();i++){
        bw.write(model.getColumnName(i)+"\t");
      }
      bw.write("\n");
      for (int i=0;i<model.getRowCount();i++){
        for (int j=0;j<model.getColumnCount();j++){
            Object value=model.getValueAt(i,j);
            if (value!=null){
          bw.write(value.toString()+"\t");}else{bw.write(""+"\t");}
        }
        bw.write("\n");
      }
      bw.close();
      JOptionPane.showMessageDialog(this, "File saved to: "+path+"\\exported.xls");
      }
      else{System.out.println("path was not choosed");}

}   
 

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing
  
    private void searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBoxActionPerformed
         search();        // TODO add your handling code here:
    }//GEN-LAST:event_searchBoxActionPerformed

    private void tabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMousePressed
       if (evt.getClickCount() == 2) {
       int rowID = tabel.getSelectedRow();
       String deskID = tabel.getValueAt(rowID, 0).toString();
       SingleDesk sgl=new SingleDesk(deskID);
       sgl.setVisible(true);
    } // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_tabelMousePressed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        try {
            exportTable(model);       // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(searchForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exportButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                searchForm asd= new searchForm();
                asd.setVisible(true);
                
            }
        });
    }
   
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exportButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JScrollPane panelTabel;
    private javax.swing.JTextField searchBox;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> searchCategory;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables
    private final int inaltimeInitiala;
    DefaultTableModel model;
}

